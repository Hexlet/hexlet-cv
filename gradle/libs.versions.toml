# This file was generated by the Gradle 'init' task.
# https://docs.gradle.org/current/userguide/platforms.html#sub::toml-dependencies-format

[plugins]


spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot-version" }
spring-dependency-management = { id = "io.spring.dependency-management", version.ref = "spring-dependency-version" }
lombok = { id = "io.freefair.lombok", version.ref = "lombok-plugin" }
versions = { id = "com.github.ben-manes.versions", version.ref = "versions-plugin" }
shadow = { id = "com.github.johnrengelman.shadow", version.ref = "shadow-plugin" }
sonarqube = { id = "org.sonarqube", version.ref = "sonarqube-plugin" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless-plugin" }


[versions]

spring-boot-version = "3.5.0"
spring-security-test-version = "6.5.0"
spring-dependency-version = "1.1.7"
lombok-plugin = "8.14"
versions-plugin = "0.52.0"
shadow-plugin = "8.1.1"
sonarqube-plugin = "6.2.0.5505"
spotless-plugin = "7.0.3"
guava = "33.4.8-jre"
dotenv ="3.2.0"

jackson-databind-nullable = "0.2.6"
springdoc-openapi-ui = "2.8.8"
commons-lang3 = "3.17.0"
datafaker = "2.4.3"
instancio-junit = "5.4.1"
jsonunit-assertj = "4.1.1"
mapstruct = "1.6.3"
h2 = "2.3.232"
junit-bom = "5.12.2"
##     ⬆ = "5.13.0-M1"
##     ⬆ = "5.13.0-M2"
##     ⬆ = "5.13.0-M3"
##     ⬆ = "5.13.0-RC1"

inertia4j-spring = "1.0.4"
#inertia4j-starter = "1.0.2"
#inertia4j-spring-adapter = "1.2.0"
#inertia4j-spring-thymeleaf = "1.2.0"

postgresql = "42.7.3"


[libraries]
# Lombok
lombok = { module = "org.projectlombok:lombok", version.ref = "lombok-plugin" }

# Spring Boot
springBootStarterWeb = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "spring-boot-version" }
springBootStarterDataJpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa", version.ref = "spring-boot-version" }
springBootStarterValidation = { module = "org.springframework.boot:spring-boot-starter-validation", version.ref = "spring-boot-version" }
springBootStarterActuator = { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "spring-boot-version" }
springBootStarterSecurity = { module = "org.springframework.boot:spring-boot-starter-security", version.ref = "spring-boot-version" }
springBootStarterOauth2ResourceServer = { module = "org.springframework.boot:spring-boot-starter-oauth2-resource-server", version.ref = "spring-boot-version" }
springBootStarterTest = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "spring-boot-version" }
springBootStarterMail = { module = "org.springframework.boot:spring-boot-starter-mail", version.ref = "spring-boot-version" }
springBootStarterFreeMarker = { module = "org.springframework.boot:spring-boot-starter-freemarker", version.ref = "spring-boot-version" }
springBootDevtools = { module = "org.springframework.boot:spring-boot-devtools", version.ref = "spring-boot-version" }
springBootConfigProcessor = { module = "org.springframework.boot:spring-boot-configuration-processor", version.ref = "spring-boot-version" }

# Spring Security Test
springSecurityTest = { module = "org.springframework.security:spring-security-test", version.ref = "spring-security-test-version" }

# OpenAPI
springdocOpenapiUi = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "springdoc-openapi-ui" }

# Jackson
jacksonDatabindNullable = { module = "org.openapitools:jackson-databind-nullable", version.ref = "jackson-databind-nullable" }

# Utilities
commonsLang3 = { module = "org.apache.commons:commons-lang3", version.ref = "commons-lang3" }
datafaker = { module = "net.datafaker:datafaker", version.ref = "datafaker" }
instancioJunit = { module = "org.instancio:instancio-junit", version.ref = "instancio-junit" }
jsonunitAssertj = { module = "net.javacrumbs.json-unit:json-unit-assertj", version.ref = "jsonunit-assertj" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }
dotenv = { module = "io.github.cdimascio:dotenv-java", version.ref = "dotenv" }

# MapStruct
mapstruct = { module = "org.mapstruct:mapstruct", version.ref = "mapstruct" }
mapstructProcessor = { module = "org.mapstruct:mapstruct-processor", version.ref = "mapstruct" }

# Database
h2 = { module = "com.h2database:h2", version.ref = "h2" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }

# JUnit
junitBom = { module = "org.junit:junit-bom", version.ref = "junit-bom" }
junitJupiter = { module = "org.junit.jupiter:junit-jupiter" }
junitPlatformLauncher = { module = "org.junit.platform:junit-platform-launcher" }

# Inertia4J
inertia4jSpring = { module = "io.github.inertia4j:inertia4j-spring", version.ref = "inertia4j-spring" }
#inertia4jSpringStarter = { module = "dev.inertia4j:spring-boot-starter", version.ref = "inertia4j-starter" }
#inertia4jSpringAdapter = { module = "dev.inertia4j:inertia4j-spring-adapter", version.ref = "inertia4j-spring-adapter" }
#inertia4jSpringThymeleaf = { module = "dev.inertia4j:inertia4j-spring-thymeleaf", version.ref = "inertia4j-spring-thymeleaf" }