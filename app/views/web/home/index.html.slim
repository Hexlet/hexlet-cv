- title t('.title')
- description t('.description')

.nav.nav-pills.mb-3.justify-content-center
  = filter_link(t('.all'), {}, class: 'nav-item nav-link')
  = filter_link(t('.popular'), { popular_gteq: Date.current - 1.week }, class: 'nav-item nav-link')
  = filter_link(t('.newest'), { created_at_gteq: Date.current - 1.day }, class: 'nav-item nav-link')
  = filter_link(t('.without_answers'), { answers_count_eq: 0 }, class: 'nav-item nav-link')

- @resumes.each do |resume|
  .card.mb-3.shadow-sm.border-0
    .card-body
      .d-flex.flex-row
        .d-flex.flex-column.me-4.text-center.mx-auto
          .text-muted.mb-3.me-3
            .h2.mb-0.fw-lighter = resume.answers.count
            .small = t('.answers', count: resume.answers.count)
          .text-muted.mb-3.me-3
            .h2.mb-0.fw-lighter = resume.impressions_count
            .small = t('.views', count: resume.impressions_count)
          / .text-muted.text-center
          /   .h2.mb-0.fw-lighter= 12
          /   .small= t('.likes')
        .d-flex.flex-column
          h5.card-title = link_to resume, resume_path(resume), class: 'stretched-link'
          .card-text.mb-2 = truncate_markdown(resume.summary, length: 200)
          .text-end.small.mt-auto.text-muted
            span.me-3.text-muted
              = distance_of_time_in_words_to_now resume.created_at
            = resume.user
= paginate @resumes
